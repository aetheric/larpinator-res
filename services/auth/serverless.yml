---
org:     tzrlk
app:     larpinator
service: larpinator-res-auth

provider:
  name:   aws
  region: ap-southeast-2
  stage:  dev

custom:
  stage: ${opt:stage, self:provider.stage}

resources:
  Resources:

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName:           ${self.custom.stage}-ext-user-pool
        UsernameAttributes:     [ email ]
        AutoVerifiedAttributes: [ email ]

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName:        ${self.custom.stage}-ext-user-pool-client
        UserPoolId:        { Ref: CognitoUserPool }
        ExplicitAuthFlows: [ ADMIN_NO_SRP_AUTH ]
        GenerateSecret:    false

    # The federated identity for our user pool to auth with
    CognitoIdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        IdentityPoolName:               ${self.custom.stage}ExtIdentityPool
        AllowUnauthenticatedIdentities: false
        CognitoIdentityProviders:
          - ClientId:     { Ref: CognitoUserPoolClient }
            ProviderName: { 'Fn::GetAtt': [ CognitoUserPool, ProviderName ] }

    # IAM roles
    CognitoIdentityPoolRoles:
      Type: AWS::Cognito::IdentityPoolRoleAttachment
      Properties:
        IdentityPoolId: { Ref: CognitoIdentityPool }
        Roles:
          authenticated: { 'Fn::GetAtt': [ CognitoAuthRole, Arn ] }

    # IAM role used for authenticated users
    CognitoAuthRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal: { Federated: cognito-identity.amazonaws.com }
              Action:    [ 'sts:AssumeRoleWithWebIdentity' ]
              Condition:
                StringEquals:
                  'cognito-identity.amazonaws.com:aud': { Ref: CognitoIdentityPool }
                'ForAnyValue:StringLike':
                  'cognito-identity.amazonaws.com:amr': authenticated
        Policies:
          - PolicyName: CognitoAuthorizedPolicy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect:   Allow
                  Action:
                    - 'mobileanalytics:PutEvents'
                    - 'cognito-sync:*'
                    - 'cognito-identity:*'
                  Resource: '*'

# Print out the Id of the User Pool and Identity Pool that are created
Outputs:

  UserPoolId:
    Value: { Ref: CognitoUserPool }

  UserPoolClientId:
    Value: { Ref: CognitoUserPoolClient }

  IdentityPoolId:
    Value: { Ref: CognitoIdentityPool }

  CognitoAuthRole:
    Value:  { Ref: CognitoAuthRole }
    Export: { Name: ExtCognitoAuthRole-${self:custom.stage} }
